plugins {
    id("io.github.gradle-nexus.publish-plugin") version "1.2.0"
}

apply {
    plugin "base"
    plugin "java"
    plugin "checkstyle"
    plugin "jacoco"
    plugin "idea"
    plugin "eclipse"
    plugin "maven-publish"
    plugin "signing"
}

wrapper {
  gradleVersion = '8.2'
}

repositories {
    mavenLocal()
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8
group = "io.whatap"
version = "0.0.1"
description = "The java-grok library supported on www.whatap.io"
archivesBaseName = "java-grok"

ext {
    checkStyleToolVersion = "6.19"
    jacocoToolVersion = "0.7.9"

    commonsLang3Version = "3.7"

    junitVersion = "4.12"
    assertjVersion = "3.9.1"
    guavaVersion = "24.0-jre"
}

dependencies {
    implementation "org.apache.commons:commons-lang3:$commonsLang3Version"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation "com.google.guava:guava:$guavaVersion"
    testImplementation "org.hamcrest:hamcrest-core:2.2"
    testImplementation "org.hamcrest:hamcrest-library:2.2"
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

// Needed to avoid including all the jar signing and sonatype setup.
if (project.hasProperty("withDeployment")) {
    apply from: "$rootProject.projectDir/gradle/sonatype.gradle"
}

checkstyle {
    configFile = file("${project.projectDir}/extra/checkstyle/checkstyle.xml")
    toolVersion = "$checkStyleToolVersion"
    checkstyleTest.enabled = false

}

checkstyleMain {
    source = 'src/main/java'
    doLast {
        project.ext.checkType = "main"
    }
}

jacoco {
    toolVersion = "$jacocoToolVersion"
}

jacocoTestReport {
    reports {
//        xml.enabled false
//        csv.enabled false
    }
}

nexusPublishing {
    repositories {
        sonatype {  //only for users registered in Sonatype after 24 Feb 2021
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            packageGroup = "io.whatap"
            stagingProfileId = "36098d558829d8"
            username = "hwanseok"
            password = "&t9V#kas@Es8dAX"
        }
    }
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'java-grok'
                description = 'Simple API that allows you to easily parse logs and other files'
                url = 'https://github.com/whatap/java-grok'
//                properties = [
//                        myProp: "value",
//                        "prop.with.dots": "anotherValue"
//                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://github.com/whatap/java-grok/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'hwanseok'
                        name = 'HwanSeok Jang'
                        email = 'hwanseok@whatap.io'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:whatap/java-grok.git'
                    developerConnection = 'scm:git:git@github.com:whatap/java-grok.git'
                    url = 'scm:git:git@github.com:whatap/java-grok.git'
                }
            }
        }
    }
}
// https://docs.gradle.org/current/userguide/publishing_maven.html